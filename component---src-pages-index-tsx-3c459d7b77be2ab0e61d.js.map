{"version":3,"sources":["webpack:///./src/components/bio.tsx","webpack:///./src/pages/index.tsx"],"names":["Bio","query","render","data","site","siteMetadata","description","social","href","twitter","pageQuery","Tags","siteTitle","title","group","allMarkdownRemark","keywords","className","map","tag","key","fieldValue","to","totalCount"],"mappings":"2FAAA,qCA4CeA,IA9BO,kBACpB,kBAAC,cAAD,CACEC,MAAK,aAYLC,OAAQ,SAACC,GAAqD,MAC9BA,EAAKC,KAAKC,aAAjCC,EADqD,EACrDA,YAAaC,EADwC,EACxCA,OACpB,OACE,6BACE,4BAAKD,GACL,yCAGE,uBAAGE,KAAMD,EAAOE,SAAhB,kB,kCCpCZ,0HAyDaC,EAAY,aAgBVC,UA9De,SAAC,GAAW,IAAVR,EAAU,EAAVA,KACxBS,EAAYT,EAAKC,KAAKC,aAAaQ,MACnCC,EAAQX,EAAKY,mBAAqBZ,EAAKY,kBAAkBD,MAE/D,OACE,kBAAC,IAAD,CAAQD,MAAOD,GACb,kBAAC,IAAD,CAAMC,MAAM,WAAWG,SAAU,CAAC,OAAD,iCACjC,kBAAC,IAAD,MACA,iCAEE,yBAAKC,UAAS,gBACXH,GACCA,EAAMI,KACJ,SAAAC,GAAG,OACDA,GACE,yBAAKC,IAAKD,EAAIE,YACZ,4BACE,kBAAC,OAAD,CAAMC,GAAE,SAAWH,EAAIE,WAAf,KAA+BF,EAAIE,aAE7C,+BACGF,EAAII,WADP,QAEsB,IAAnBJ,EAAII,WAAmB,GAAK","file":"component---src-pages-index-tsx-3c459d7b77be2ab0e61d.js","sourcesContent":["import React from 'react'\nimport {StaticQuery, graphql} from 'gatsby'\n\ntype StaticQueryData = {\n  site: {\n    siteMetadata: {\n      description: string\n      social: {\n        twitter: string\n      }\n    }\n  }\n}\n\nconst Bio: React.FC = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryData): React.ReactElement | null => {\n      const {description, social} = data.site.siteMetadata\n      return (\n        <div>\n          <h1>{description}</h1>\n          <p>\n            손가락학습 에서 만듬 \n            \n            <a href={social.twitter}>Twitter</a>\n          </p>\n        </div>\n      )\n    }}\n  />\n)\n\nexport default Bio","import React from 'react'\nimport {Link, graphql} from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\nimport Bio from '../components/bio'\n\ninterface Props {\n  readonly data: PageQueryData\n}\n\nconst Tags: React.FC<Props> = ({data}) => {\n  const siteTitle = data.site.siteMetadata.title\n  const group = data.allMarkdownRemark && data.allMarkdownRemark.group\n\n  return (\n    <Layout title={siteTitle}>\n      <Head title=\"All tags\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\n      <Bio />\n      <article>\n        {/* <h1>학습할것</h1> */}\n        <div className={`page-content`}>\n          {group &&\n            group.map(\n              tag =>\n                tag && (\n                  <div key={tag.fieldValue}>\n                    <h3>\n                      <Link to={`/tags/${tag.fieldValue}/`}>{tag.fieldValue}</Link>\n                    </h3>\n                    <small>\n                      {tag.totalCount} post\n                      {tag.totalCount === 1 ? '' : 's'}\n                    </small>\n                  </div>\n                ),\n            )}\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    group: {\n      fieldValue: string\n      totalCount: number\n    }[]\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: {frontmatter: {published: {ne: false}}}) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n\nexport default Tags"],"sourceRoot":""}